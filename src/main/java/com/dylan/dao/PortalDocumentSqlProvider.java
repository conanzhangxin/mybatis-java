package com.dylan.dao;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.dylan.model.PortalDocumentExample.Criteria;
import com.dylan.model.PortalDocumentExample.Criterion;
import com.dylan.model.PortalDocumentExample;
import com.dylan.model.PortalDocumentWithBLOBs;
import java.util.List;
import java.util.Map;

public class PortalDocumentSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table portal_document
     *
     * @mbggenerated Tue Nov 12 16:31:58 CST 2013
     */
    public String countByExample(PortalDocumentExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("portal_document");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table portal_document
     *
     * @mbggenerated Tue Nov 12 16:31:58 CST 2013
     */
    public String deleteByExample(PortalDocumentExample example) {
        BEGIN();
        DELETE_FROM("portal_document");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table portal_document
     *
     * @mbggenerated Tue Nov 12 16:31:58 CST 2013
     */
    public String insertSelective(PortalDocumentWithBLOBs record) {
        BEGIN();
        INSERT_INTO("portal_document");
        
        if (record.getDocType() != null) {
            VALUES("doc_type", "#{docType,jdbcType=INTEGER}");
        }
        
        if (record.getSubject() != null) {
            VALUES("subject", "#{subject,jdbcType=VARCHAR}");
        }
        
        if (record.getDocVersion() != null) {
            VALUES("doc_version", "#{docVersion,jdbcType=INTEGER}");
        }
        
        if (record.getCreator() != null) {
            VALUES("creator", "#{creator,jdbcType=BIGINT}");
        }
        
        if (record.getCreatedTime() != null) {
            VALUES("created_time", "#{createdTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLastModifiedTime() != null) {
            VALUES("last_modified_time", "#{lastModifiedTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLastModifier() != null) {
            VALUES("last_modifier", "#{lastModifier,jdbcType=BIGINT}");
        }
        
        if (record.getSubjectZhTw() != null) {
            VALUES("subject_zh_tw", "#{subjectZhTw,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getSubjectZhCn() != null) {
            VALUES("subject_zh_cn", "#{subjectZhCn,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getContent() != null) {
            VALUES("content", "#{content,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getContentZhTw() != null) {
            VALUES("content_zh_tw", "#{contentZhTw,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getContentZhCn() != null) {
            VALUES("content_zh_cn", "#{contentZhCn,jdbcType=LONGVARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table portal_document
     *
     * @mbggenerated Tue Nov 12 16:31:58 CST 2013
     */
    public String selectByExampleWithBLOBs(PortalDocumentExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("doc_id");
        } else {
            SELECT("doc_id");
        }
        SELECT("doc_type");
        SELECT("subject");
        SELECT("doc_version");
        SELECT("creator");
        SELECT("created_time");
        SELECT("last_modified_time");
        SELECT("last_modifier");
        SELECT("subject_zh_tw");
        SELECT("subject_zh_cn");
        SELECT("content");
        SELECT("content_zh_tw");
        SELECT("content_zh_cn");
        FROM("portal_document");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table portal_document
     *
     * @mbggenerated Tue Nov 12 16:31:58 CST 2013
     */
    public String selectByExample(PortalDocumentExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("doc_id");
        } else {
            SELECT("doc_id");
        }
        SELECT("doc_type");
        SELECT("subject");
        SELECT("doc_version");
        SELECT("creator");
        SELECT("created_time");
        SELECT("last_modified_time");
        SELECT("last_modifier");
        FROM("portal_document");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table portal_document
     *
     * @mbggenerated Tue Nov 12 16:31:58 CST 2013
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        PortalDocumentWithBLOBs record = (PortalDocumentWithBLOBs) parameter.get("record");
        PortalDocumentExample example = (PortalDocumentExample) parameter.get("example");
        
        BEGIN();
        UPDATE("portal_document");
        
        if (record.getDocId() != null) {
            SET("doc_id = #{record.docId,jdbcType=BIGINT}");
        }
        
        if (record.getDocType() != null) {
            SET("doc_type = #{record.docType,jdbcType=INTEGER}");
        }
        
        if (record.getSubject() != null) {
            SET("subject = #{record.subject,jdbcType=VARCHAR}");
        }
        
        if (record.getDocVersion() != null) {
            SET("doc_version = #{record.docVersion,jdbcType=INTEGER}");
        }
        
        if (record.getCreator() != null) {
            SET("creator = #{record.creator,jdbcType=BIGINT}");
        }
        
        if (record.getCreatedTime() != null) {
            SET("created_time = #{record.createdTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLastModifiedTime() != null) {
            SET("last_modified_time = #{record.lastModifiedTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLastModifier() != null) {
            SET("last_modifier = #{record.lastModifier,jdbcType=BIGINT}");
        }
        
        if (record.getSubjectZhTw() != null) {
            SET("subject_zh_tw = #{record.subjectZhTw,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getSubjectZhCn() != null) {
            SET("subject_zh_cn = #{record.subjectZhCn,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getContent() != null) {
            SET("content = #{record.content,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getContentZhTw() != null) {
            SET("content_zh_tw = #{record.contentZhTw,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getContentZhCn() != null) {
            SET("content_zh_cn = #{record.contentZhCn,jdbcType=LONGVARCHAR}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table portal_document
     *
     * @mbggenerated Tue Nov 12 16:31:58 CST 2013
     */
    public String updateByExampleWithBLOBs(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("portal_document");
        
        SET("doc_id = #{record.docId,jdbcType=BIGINT}");
        SET("doc_type = #{record.docType,jdbcType=INTEGER}");
        SET("subject = #{record.subject,jdbcType=VARCHAR}");
        SET("doc_version = #{record.docVersion,jdbcType=INTEGER}");
        SET("creator = #{record.creator,jdbcType=BIGINT}");
        SET("created_time = #{record.createdTime,jdbcType=TIMESTAMP}");
        SET("last_modified_time = #{record.lastModifiedTime,jdbcType=TIMESTAMP}");
        SET("last_modifier = #{record.lastModifier,jdbcType=BIGINT}");
        SET("subject_zh_tw = #{record.subjectZhTw,jdbcType=LONGVARCHAR}");
        SET("subject_zh_cn = #{record.subjectZhCn,jdbcType=LONGVARCHAR}");
        SET("content = #{record.content,jdbcType=LONGVARCHAR}");
        SET("content_zh_tw = #{record.contentZhTw,jdbcType=LONGVARCHAR}");
        SET("content_zh_cn = #{record.contentZhCn,jdbcType=LONGVARCHAR}");
        
        PortalDocumentExample example = (PortalDocumentExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table portal_document
     *
     * @mbggenerated Tue Nov 12 16:31:58 CST 2013
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("portal_document");
        
        SET("doc_id = #{record.docId,jdbcType=BIGINT}");
        SET("doc_type = #{record.docType,jdbcType=INTEGER}");
        SET("subject = #{record.subject,jdbcType=VARCHAR}");
        SET("doc_version = #{record.docVersion,jdbcType=INTEGER}");
        SET("creator = #{record.creator,jdbcType=BIGINT}");
        SET("created_time = #{record.createdTime,jdbcType=TIMESTAMP}");
        SET("last_modified_time = #{record.lastModifiedTime,jdbcType=TIMESTAMP}");
        SET("last_modifier = #{record.lastModifier,jdbcType=BIGINT}");
        
        PortalDocumentExample example = (PortalDocumentExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table portal_document
     *
     * @mbggenerated Tue Nov 12 16:31:58 CST 2013
     */
    public String updateByPrimaryKeySelective(PortalDocumentWithBLOBs record) {
        BEGIN();
        UPDATE("portal_document");
        
        if (record.getDocType() != null) {
            SET("doc_type = #{docType,jdbcType=INTEGER}");
        }
        
        if (record.getSubject() != null) {
            SET("subject = #{subject,jdbcType=VARCHAR}");
        }
        
        if (record.getDocVersion() != null) {
            SET("doc_version = #{docVersion,jdbcType=INTEGER}");
        }
        
        if (record.getCreator() != null) {
            SET("creator = #{creator,jdbcType=BIGINT}");
        }
        
        if (record.getCreatedTime() != null) {
            SET("created_time = #{createdTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLastModifiedTime() != null) {
            SET("last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getLastModifier() != null) {
            SET("last_modifier = #{lastModifier,jdbcType=BIGINT}");
        }
        
        if (record.getSubjectZhTw() != null) {
            SET("subject_zh_tw = #{subjectZhTw,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getSubjectZhCn() != null) {
            SET("subject_zh_cn = #{subjectZhCn,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getContent() != null) {
            SET("content = #{content,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getContentZhTw() != null) {
            SET("content_zh_tw = #{contentZhTw,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getContentZhCn() != null) {
            SET("content_zh_cn = #{contentZhCn,jdbcType=LONGVARCHAR}");
        }
        
        WHERE("doc_id = #{docId,jdbcType=BIGINT}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table portal_document
     *
     * @mbggenerated Tue Nov 12 16:31:58 CST 2013
     */
    protected void applyWhere(PortalDocumentExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}